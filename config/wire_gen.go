// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"pm_go_version/app/controller"
	"pm_go_version/app/repository"
	"pm_go_version/app/service"
)

// Injectors from wire.go:

func Init() *Initialization {
	gormDB := ConnectToDB()
	userRepositoryImpl := repository.UserRepositoryInit(gormDB)
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	workspaceRepositoryImpl := repository.WorkspaceRepositoryInit(gormDB)
	workspaceServiceImpl := service.WorkspaceServiceInit(workspaceRepositoryImpl)
	workspaceControllerImpl := controller.WorkspaceControllerInit(workspaceServiceImpl)
	userWorkspaceRepositoryImpl := repository.UserWorkspaceRepositoryInit(gormDB)
	userWorkspaceServiceImpl := service.UserWorkspaceServiceInit(userWorkspaceRepositoryImpl)
	userWorkspaceControllerImpl := controller.UserWorkspaceControllerInit(userWorkspaceServiceImpl)
	projectRepositoryImpl := repository.ProjectRepositoryInit(gormDB)
	projectServiceImpl := service.ProjectServiceInit(projectRepositoryImpl)
	projectControllerImpl := controller.ProjectControllerInit(projectServiceImpl)
	taskRepositoryImpl := repository.TaskRepositoryInit(gormDB)
	taskServiceImpl := service.TaskServiceInit(taskRepositoryImpl)
	taskControllerImpl := controller.TaskControllerInit(taskServiceImpl)
	initialization := NewInitialization(userControllerImpl, workspaceControllerImpl, userWorkspaceControllerImpl, projectControllerImpl, taskControllerImpl)
	return initialization
}

// wire.go:

var db = wire.NewSet(ConnectToDB)

var userServiceSet = wire.NewSet(service.UserServiceInit, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)))

var userRepoSet = wire.NewSet(repository.UserRepositoryInit, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)))

var userCtrlSet = wire.NewSet(controller.UserControllerInit, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))

var workspaceCtrlSet = wire.NewSet(controller.WorkspaceControllerInit, wire.Bind(new(controller.WorkspaceController), new(*controller.WorkspaceControllerImpl)))

var workspaceServiceSet = wire.NewSet(service.WorkspaceServiceInit, wire.Bind(new(service.WorkspaceService), new(*service.WorkspaceServiceImpl)))

var workspaceRepoSet = wire.NewSet(repository.WorkspaceRepositoryInit, wire.Bind(new(repository.WorkspaceRepository), new(*repository.WorkspaceRepositoryImpl)))

var userWorkspaceCtrlSet = wire.NewSet(controller.UserWorkspaceControllerInit, wire.Bind(new(controller.UserWorkspaceController), new(*controller.UserWorkspaceControllerImpl)))

var userWorkspaceServiceSet = wire.NewSet(service.UserWorkspaceServiceInit, wire.Bind(new(service.UserWorkspaceService), new(*service.UserWorkspaceServiceImpl)))

var userWorkspaceRepoSet = wire.NewSet(repository.UserWorkspaceRepositoryInit, wire.Bind(new(repository.UserWorkspaceRepository), new(*repository.UserWorkspaceRepositoryImpl)))

var ProjectCtrlSet = wire.NewSet(controller.ProjectControllerInit, wire.Bind(new(controller.ProjectController), new(*controller.ProjectControllerImpl)))

var ProjectServiceSet = wire.NewSet(service.ProjectServiceInit, wire.Bind(new(service.ProjectService), new(*service.ProjectServiceImpl)))

var ProjectRepoSet = wire.NewSet(repository.ProjectRepositoryInit, wire.Bind(new(repository.ProjectRepository), new(*repository.ProjectRepositoryImpl)))

var TaskCtrlSet = wire.NewSet(controller.TaskControllerInit, wire.Bind(new(controller.TaskController), new(*controller.TaskControllerImpl)))

var TaskServiceSet = wire.NewSet(service.TaskServiceInit, wire.Bind(new(service.TaskService), new(*service.TaskServiceImpl)))

var TaskRepoSet = wire.NewSet(repository.TaskRepositoryInit, wire.Bind(new(repository.TaskRepository), new(*repository.TaskRepositoryImpl)))
